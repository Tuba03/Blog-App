{"ast":null,"code":"// src/services/apiService.js\n\nconst API_BASE_URL = 'http://localhost:3000';\nconst checkResponse = async response => {\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.detail || 'Something went wrong.');\n  }\n  return response.json();\n};\n\n// Authentication Endpoints\n\n// src/services/apiService.js\nexport const loginUser = async (email, password) => {\n  // ...\n  const response = await fetch(`${API_BASE_URL}/login`, {\n    // <--- Changed from /auth/token\n    method: 'POST'\n    // ...\n  });\n  return checkResponse(response);\n};\nexport const signupUser = async (email, password) => {\n  const response = await fetch(`${API_BASE_URL}/auth/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  return checkResponse(response);\n};\n\n// Profile Endpoints\n\nexport const getProfile = async (token, userId = 'me') => {\n  const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return checkResponse(response);\n};\nexport const updateProfile = async (token, name, profilePhoto) => {\n  const response = await fetch(`${API_BASE_URL}/users/me`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      name,\n      profile_photo_url: profilePhoto\n    })\n  });\n  return checkResponse(response);\n};\nexport const followUser = async (userId, token) => {\n  const response = await fetch(`${API_BASE_URL}/users/${userId}/follow`, {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return checkResponse(response);\n};\n\n// Blog Endpoints\n\nexport const createBlog = async (title, content, token) => {\n  const response = await fetch(`${API_BASE_URL}/blogs`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      title,\n      content\n    })\n  });\n  return checkResponse(response);\n};\nexport const getAllBlogs = async () => {\n  const response = await fetch(`${API_BASE_URL}/blogs`, {\n    method: 'GET'\n  });\n  return checkResponse(response);\n};\nexport const getMyBlogs = async token => {\n  const response = await fetch(`${API_BASE_URL}/blogs/me`, {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return checkResponse(response);\n};\nexport const getBlogById = async blogId => {\n  const response = await fetch(`${API_BASE_URL}/blogs/${blogId}`, {\n    method: 'GET'\n  });\n  return checkResponse(response);\n};","map":{"version":3,"names":["API_BASE_URL","checkResponse","response","ok","errorData","json","Error","detail","loginUser","email","password","fetch","method","signupUser","headers","body","JSON","stringify","getProfile","token","userId","updateProfile","name","profilePhoto","profile_photo_url","followUser","createBlog","title","content","getAllBlogs","getMyBlogs","getBlogById","blogId"],"sources":["/Users/tuba/Downloads/Blog-App-master/src/services/apiService.js"],"sourcesContent":["// src/services/apiService.js\n\nconst API_BASE_URL = 'http://localhost:3000';\n\nconst checkResponse = async (response) => {\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.detail || 'Something went wrong.');\n  }\n  return response.json();\n};\n\n// Authentication Endpoints\n\n// src/services/apiService.js\nexport const loginUser = async (email, password) => {\n  // ...\n  const response = await fetch(`${API_BASE_URL}/login`, { // <--- Changed from /auth/token\n    method: 'POST',\n    // ...\n  });\n  return checkResponse(response);\n};\n\nexport const signupUser = async (email, password) => {\n  const response = await fetch(`${API_BASE_URL}/auth/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  });\n  return checkResponse(response);\n};\n\n// Profile Endpoints\n\nexport const getProfile = async (token, userId = 'me') => {\n  const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n  return checkResponse(response);\n};\n\nexport const updateProfile = async (token, name, profilePhoto) => {\n  const response = await fetch(`${API_BASE_URL}/users/me`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    },\n    body: JSON.stringify({ name, profile_photo_url: profilePhoto }),\n  });\n  return checkResponse(response);\n};\n\nexport const followUser = async (userId, token) => {\n  const response = await fetch(`${API_BASE_URL}/users/${userId}/follow`, {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n  return checkResponse(response);\n};\n\n// Blog Endpoints\n\nexport const createBlog = async (title, content, token) => {\n  const response = await fetch(`${API_BASE_URL}/blogs`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    },\n    body: JSON.stringify({ title, content }),\n  });\n  return checkResponse(response);\n};\n\nexport const getAllBlogs = async () => {\n  const response = await fetch(`${API_BASE_URL}/blogs`, {\n    method: 'GET',\n  });\n  return checkResponse(response);\n};\n\nexport const getMyBlogs = async (token) => {\n  const response = await fetch(`${API_BASE_URL}/blogs/me`, {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n  return checkResponse(response);\n};\n\nexport const getBlogById = async (blogId) => {\n  const response = await fetch(`${API_BASE_URL}/blogs/${blogId}`, {\n    method: 'GET',\n  });\n  return checkResponse(response);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}