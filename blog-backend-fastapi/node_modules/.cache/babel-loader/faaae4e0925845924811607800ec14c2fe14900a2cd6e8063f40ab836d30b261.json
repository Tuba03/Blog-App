{"ast":null,"code":"// src/services/apiService.js\n\nconst API_BASE_URL = 'http://localhost:8000';\nconst checkResponse = async response => {\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.detail || 'Something went wrong.');\n  }\n  return response.json();\n};\n\n// Authentication Endpoints\n\nexport const loginUser = async (email, password) => {\n  const formData = new URLSearchParams();\n  formData.append('username', email);\n  formData.append('password', password);\n  const response = await fetch(`${API_BASE_URL}/auth/token`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: formData.toString()\n  });\n  return checkResponse(response);\n};\nexport const Signup = async (email, password) => {\n  const response = await fetch(`${API_BASE_URL}/auth/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  return checkResponse(response);\n};\n\n// Profile Endpoints\n_c = Signup;\nexport const getProfile = async (token, userId = 'me') => {\n  const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return checkResponse(response);\n};\nexport const updateProfile = async (token, name, profilePhoto) => {\n  const response = await fetch(`${API_BASE_URL}/users/me`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      name,\n      profile_photo_url: profilePhoto\n    })\n  });\n  return checkResponse(response);\n};\nexport const followUser = async (userId, token) => {\n  const response = await fetch(`${API_BASE_URL}/users/${userId}/follow`, {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return checkResponse(response);\n};\n\n// Blog Endpoints\n\nexport const createBlog = async (title, content, token) => {\n  const response = await fetch(`${API_BASE_URL}/blogs`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      title,\n      content\n    })\n  });\n  return checkResponse(response);\n};\nexport const getAllBlogs = async () => {\n  const response = await fetch(`${API_BASE_URL}/blogs`, {\n    method: 'GET'\n  });\n  return checkResponse(response);\n};\nexport const getMyBlogs = async token => {\n  const response = await fetch(`${API_BASE_URL}/blogs/me`, {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return checkResponse(response);\n};\nexport const getBlogById = async blogId => {\n  const response = await fetch(`${API_BASE_URL}/blogs/${blogId}`, {\n    method: 'GET'\n  });\n  return checkResponse(response);\n};\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["API_BASE_URL","checkResponse","response","ok","errorData","json","Error","detail","loginUser","email","password","formData","URLSearchParams","append","fetch","method","headers","body","toString","Signup","JSON","stringify","_c","getProfile","token","userId","updateProfile","name","profilePhoto","profile_photo_url","followUser","createBlog","title","content","getAllBlogs","getMyBlogs","getBlogById","blogId","$RefreshReg$"],"sources":["/Users/tuba/Downloads/Blog-App-master/src/services/apiService.js"],"sourcesContent":["// src/services/apiService.js\n\nconst API_BASE_URL = 'http://localhost:8000';\n\nconst checkResponse = async (response) => {\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.detail || 'Something went wrong.');\n  }\n  return response.json();\n};\n\n// Authentication Endpoints\n\nexport const loginUser = async (email, password) => {\n  const formData = new URLSearchParams();\n  formData.append('username', email);\n  formData.append('password', password);\n\n  const response = await fetch(`${API_BASE_URL}/auth/token`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: formData.toString(),\n  });\n\n  return checkResponse(response);\n};\n\nexport const Signup = async (email, password) => {\n  const response = await fetch(`${API_BASE_URL}/auth/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  });\n  return checkResponse(response);\n};\n\n// Profile Endpoints\n\nexport const getProfile = async (token, userId = 'me') => {\n  const response = await fetch(`${API_BASE_URL}/users/${userId}`, {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n  return checkResponse(response);\n};\n\nexport const updateProfile = async (token, name, profilePhoto) => {\n  const response = await fetch(`${API_BASE_URL}/users/me`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    },\n    body: JSON.stringify({ name, profile_photo_url: profilePhoto }),\n  });\n  return checkResponse(response);\n};\n\nexport const followUser = async (userId, token) => {\n  const response = await fetch(`${API_BASE_URL}/users/${userId}/follow`, {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n  return checkResponse(response);\n};\n\n// Blog Endpoints\n\nexport const createBlog = async (title, content, token) => {\n  const response = await fetch(`${API_BASE_URL}/blogs`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    },\n    body: JSON.stringify({ title, content }),\n  });\n  return checkResponse(response);\n};\n\nexport const getAllBlogs = async () => {\n  const response = await fetch(`${API_BASE_URL}/blogs`, {\n    method: 'GET',\n  });\n  return checkResponse(response);\n};\n\nexport const getMyBlogs = async (token) => {\n  const response = await fetch(`${API_BASE_URL}/blogs/me`, {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n  return checkResponse(response);\n};\n\nexport const getBlogById = async (blogId) => {\n  const response = await fetch(`${API_BASE_URL}/blogs/${blogId}`, {\n    method: 'GET',\n  });\n  return checkResponse(response);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}