{"ast":null,"code":"var _jsxFileName = \"/Users/tuba/Downloads/Blog-App-master/src/components/ForgotPassword.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Card, CardBody, CardHeader, Col, Container, FormGroup, Row } from 'reactstrap';\n// import \"./pages/ForgotPassword.css\";\n\n// const ForgotPassword = () => {\n//   const [email, setEmail] = useState('');\n//   const [message, setMessage] = useState('');\n//   const [loading, setLoading] = useState(false);\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     setLoading(true);\n\n//     try {\n//       // Simulate API call to send OTP\n//       await new Promise((resolve) => setTimeout(resolve, 2000));\n//       setMessage('If the email exists, OTP has been sent.');\n//     } catch (error) {\n//       setMessage('There was an error. Please try again.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n\n//       <Row className='mt-4'>\n//         <Col sm={{ size: 5, offset: 3 }}>\n//           <Card className=\"Forgot-password\">\n//             <CardHeader>\n//               <h2>Forgot Your Password?</h2>\n//             </CardHeader>\n//             <CardBody>\n//               <p>Enter your email address and we'll send you a OTP to set your password.</p>\n//               <form onSubmit={handleSubmit}>\n//                 <FormGroup>\n//                   <label htmlFor=\"email\">Email Address</label>\n//                   <input\n//                     type=\"email\"\n//                     id=\"email\"\n//                     value={email}\n//                     onChange={(e) => setEmail(e.target.value)}\n//                     required\n//                   />\n//                 </FormGroup>\n//                 <Container>\n//                   <button type=\"submit\" className=\"text-center\" disabled={loading}>\n//                     {loading ? 'Sending...' : 'Send OTP'}\n//                   </button>\n//                 </Container>\n//               </form>\n//             </CardBody>\n//             {message && <p className=\"message\">{message}</p>}\n//           </Card>\n//         </Col>\n//       </Row>\n\n//   );\n// };\n\n// export default ForgotPassword;\n\nimport React, { useState } from 'react';\nimport { Card, CardBody, CardHeader, Col, Container, FormGroup, Row } from 'reactstrap';\nimport { sendOtp, verifyOtp } from '../services/user-service'; // Import functions\n// import \"./ForgetPassword\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [otp, setOtp] = useState('');\n  const [step, setStep] = useState(1);\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleEmailSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      await sendOtp(email);\n      setMessage('If the email exists, OTP has been sent.');\n      setStep(2);\n    } catch (error) {\n      setMessage('There was an error. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleOtpSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      await verifyOtp(email, otp);\n      setMessage('OTP verified successfully. You can now reset your password.');\n    } catch (error) {\n      setMessage('Invalid OTP. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      sm: {\n        size: 5,\n        offset: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Forgot Your Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: step === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Enter your email address and we'll send you an OTP to set your password.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleEmailSubmit,\n              children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  children: \"Email Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  id: \"email\",\n                  value: email,\n                  onChange: e => setEmail(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Container, {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"text-center\",\n                  disabled: loading,\n                  children: loading ? 'Sending...' : 'Send OTP'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Enter the OTP sent to your email to verify and reset your password.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleOtpSubmit,\n              children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"otp\",\n                  children: \"OTP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"otp\",\n                  value: otp,\n                  onChange: e => setOtp(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Container, {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"text-center\",\n                  disabled: loading,\n                  children: loading ? 'Verifying...' : 'Verify OTP'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n_s(ForgotPassword, \"Igc7BHrh8BGsA2cHHcsCjt38Wmw=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","Card","CardBody","CardHeader","Col","Container","FormGroup","Row","sendOtp","verifyOtp","jsxDEV","_jsxDEV","Fragment","_Fragment","ForgotPassword","_s","email","setEmail","otp","setOtp","step","setStep","message","setMessage","loading","setLoading","handleEmailSubmit","event","preventDefault","error","handleOtpSubmit","className","children","sm","size","offset","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","e","target","required","disabled","_c","$RefreshReg$"],"sources":["/Users/tuba/Downloads/Blog-App-master/src/components/ForgotPassword.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { Card, CardBody, CardHeader, Col, Container, FormGroup, Row } from 'reactstrap';\n// import \"./pages/ForgotPassword.css\";\n\n\n// const ForgotPassword = () => {\n//   const [email, setEmail] = useState('');\n//   const [message, setMessage] = useState('');\n//   const [loading, setLoading] = useState(false);\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     setLoading(true);\n\n//     try {\n//       // Simulate API call to send OTP\n//       await new Promise((resolve) => setTimeout(resolve, 2000));\n//       setMessage('If the email exists, OTP has been sent.');\n//     } catch (error) {\n//       setMessage('There was an error. Please try again.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n\n//       <Row className='mt-4'>\n//         <Col sm={{ size: 5, offset: 3 }}>\n//           <Card className=\"Forgot-password\">\n//             <CardHeader>\n//               <h2>Forgot Your Password?</h2>\n//             </CardHeader>\n//             <CardBody>\n//               <p>Enter your email address and we'll send you a OTP to set your password.</p>\n//               <form onSubmit={handleSubmit}>\n//                 <FormGroup>\n//                   <label htmlFor=\"email\">Email Address</label>\n//                   <input\n//                     type=\"email\"\n//                     id=\"email\"\n//                     value={email}\n//                     onChange={(e) => setEmail(e.target.value)}\n//                     required\n//                   />\n//                 </FormGroup>\n//                 <Container>\n//                   <button type=\"submit\" className=\"text-center\" disabled={loading}>\n//                     {loading ? 'Sending...' : 'Send OTP'}\n//                   </button>\n//                 </Container>\n//               </form>\n//             </CardBody>\n//             {message && <p className=\"message\">{message}</p>}\n//           </Card>\n//         </Col>\n//       </Row>\n\n//   );\n// };\n\n// export default ForgotPassword;\n\n\n\nimport React, { useState } from 'react';\nimport { Card, CardBody, CardHeader, Col, Container, FormGroup, Row } from 'reactstrap';\nimport { sendOtp, verifyOtp } from '../services/user-service'; // Import functions\n// import \"./ForgetPassword\";\n\nconst ForgotPassword = () => {\n    const [email, setEmail] = useState('');\n    const [otp, setOtp] = useState('');\n    const [step, setStep] = useState(1);\n    const [message, setMessage] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const handleEmailSubmit = async (event) => {\n        event.preventDefault();\n        setLoading(true);\n\n        try {\n            await sendOtp(email);\n            setMessage('If the email exists, OTP has been sent.');\n            setStep(2);\n        } catch (error) {\n            setMessage('There was an error. Please try again.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleOtpSubmit = async (event) => {\n        event.preventDefault();\n        setLoading(true);\n\n        try {\n            await verifyOtp(email, otp);\n            setMessage('OTP verified successfully. You can now reset your password.');\n        } catch (error) {\n            setMessage('Invalid OTP. Please try again.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <Row className='mt-4'>\n            <Col sm={{ size: 5, offset: 3 }}>\n                <Card>\n                    <CardHeader>\n                        <h2>Forgot Your Password?</h2>\n                    </CardHeader>\n                    <CardBody>\n                        {step === 1 ? (\n                            <>\n                                <p>Enter your email address and we'll send you an OTP to set your password.</p>\n                                <form onSubmit={handleEmailSubmit}>\n                                    <FormGroup>\n                                        <label htmlFor=\"email\">Email Address</label>\n                                        <input\n                                            type=\"email\"\n                                            id=\"email\"\n                                            value={email}\n                                            onChange={(e) => setEmail(e.target.value)}\n                                            required\n                                        />\n                                    </FormGroup>\n                                    <Container>\n                                        <button type=\"submit\" className=\"text-center\" disabled={loading}>\n                                            {loading ? 'Sending...' : 'Send OTP'}\n                                        </button>\n                                    </Container>\n                                </form>\n                            </>\n                        ) : (\n                            <>\n                                <p>Enter the OTP sent to your email to verify and reset your password.</p>\n                                <form onSubmit={handleOtpSubmit}>\n                                    <FormGroup>\n                                        <label htmlFor=\"otp\">OTP</label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"otp\"\n                                            value={otp}\n                                            onChange={(e) => setOtp(e.target.value)}\n                                            required\n                                        />\n                                    </FormGroup>\n                                    <Container>\n                                        <button type=\"submit\" className=\"text-center\" disabled={loading}>\n                                            {loading ? 'Verifying...' : 'Verify OTP'}\n                                        </button>\n                                    </Container>\n                                </form>\n                            </>\n                        )}\n                    </CardBody>\n                    {message && <p className=\"message\">{message}</p>}\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nexport default ForgotPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}