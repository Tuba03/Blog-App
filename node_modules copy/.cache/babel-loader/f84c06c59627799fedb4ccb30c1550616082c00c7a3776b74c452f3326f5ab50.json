{"ast":null,"code":"var _jsxFileName = \"/Users/ak/Downloads/Blog-App-master/src/components/NewFeed.jsx\";\n// import React, { useEffect } from \"react\";\n// import { Row, Col } from \"reactstrap\";\n// import Post from \"./Post\";\n\n// function NewFeed(){\n//     // useEffect(()=>{\n//     //     //load post from servers\n//     //     loadAllPosts().then((data)=>{\n//     //         console.log(data);\n//     // }).catch(error=>{\n//     //     console.log(error)\n//     // })\n\n//     // },[])\n//     return(\n//         <div className=\"container-fluid\">\n\n//             <Row>\n//                 <Col md={{size:10, offset: 1}} ></Col>\n//                 <p>New Feed will be shown here.</p>\n//                 <h2>Work in progress...</h2>\n//             </Row>\n//             <Post />\n\n//         </div>\n//     )\n// }\n\n// export default NewFeed;\n\nimport React from 'react';\nimport ArticlePreview from './ArticlePreview';\nimport mockArticles from './MockArticles';\nimport './pages/Preview.css'; // Adjust the path to your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewFeed = () => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"new-feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Latest Articles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), mockArticles.length > 0 ? mockArticles.map(article => /*#__PURE__*/_jsxDEV(ArticlePreview, {\n      article: article\n    }, article.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No articles available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_c = NewFeed;\nexport default NewFeed;\nvar _c;\n$RefreshReg$(_c, \"NewFeed\");","map":{"version":3,"names":["React","ArticlePreview","mockArticles","jsxDEV","_jsxDEV","NewFeed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","article","id","_c","$RefreshReg$"],"sources":["/Users/ak/Downloads/Blog-App-master/src/components/NewFeed.jsx"],"sourcesContent":["// import React, { useEffect } from \"react\";\n// import { Row, Col } from \"reactstrap\";\n// import Post from \"./Post\";\n\n// function NewFeed(){\n//     // useEffect(()=>{\n//     //     //load post from servers\n//     //     loadAllPosts().then((data)=>{\n//     //         console.log(data);\n//     // }).catch(error=>{\n//     //     console.log(error)\n//     // })\n\n//     // },[])\n//     return(\n//         <div className=\"container-fluid\">\n            \n//             <Row>\n//                 <Col md={{size:10, offset: 1}} ></Col>\n//                 <p>New Feed will be shown here.</p>\n//                 <h2>Work in progress...</h2>\n//             </Row>\n//             <Post />\n\n//         </div>\n//     )\n// }\n\n// export default NewFeed;\n\n\nimport React from 'react';\nimport ArticlePreview from './ArticlePreview';\nimport mockArticles from './MockArticles';\nimport './pages/Preview.css'; // Adjust the path to your CSS file\n\nconst NewFeed = () => {\n    return (\n        <section className=\"new-feed\">\n            <h2>Latest Articles</h2>\n            {mockArticles.length > 0 ? (\n                mockArticles.map(article => (\n                    <ArticlePreview key={article.id} article={article} />\n                ))\n            ) : (\n                <p>No articles available.</p>\n            )}\n        </section>\n    );\n};\n\nexport default NewFeed;\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAO,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAClB,oBACID,OAAA;IAASE,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACzBH,OAAA;MAAAG,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBT,YAAY,CAACU,MAAM,GAAG,CAAC,GACpBV,YAAY,CAACW,GAAG,CAACC,OAAO,iBACpBV,OAAA,CAACH,cAAc;MAAkBa,OAAO,EAAEA;IAAQ,GAA7BA,OAAO,CAACC,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CACvD,CAAC,gBAEFP,OAAA;MAAAG,QAAA,EAAG;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC/B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAElB,CAAC;AAACK,EAAA,GAbIX,OAAO;AAeb,eAAeA,OAAO;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}