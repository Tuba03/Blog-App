{"ast":null,"code":"var _jsxFileName = \"/Users/tuba/Downloads/Blog-App-master/src/components/pages/ProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ProfileHeader from './ProfileHeader';\nimport ProfileContent from './ProfileContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchProfilePic = async (url, authToken) => {\n    const response = await axios.get(url, {\n      headers: {\n        'Authorization': `Bearer ${authToken}`,\n        'Accept': 'image/*'\n      },\n      responseType: 'blob'\n    });\n    const imageUrl = URL.createObjectURL(response.data); // Create a URL from the blob\n    return imageUrl; // Return the blob URL\n  };\n  useEffect(() => {\n    const fetchProfileData = async () => {\n      const authToken = localStorage.getItem(\"authToken\");\n      try {\n        var _userData$followersCo, _userData$followingCo;\n        console.log(\"Fetching user data...\");\n        const userResponse = await axios.get('http://100.28.49.102:9090/api/users/', {\n          headers: {\n            'Authorization': `Bearer ${authToken}`\n          }\n        });\n        const userData = userResponse.data[0];\n\n        // Fetch the profile picture using the fetchProfilePic function\n        const profilePicUrl = `http://100.28.49.102:9090/api/users/profilepic/image/?url=${userData.profilepic}`;\n        const pictureUrl = await fetchProfilePic(profilePicUrl, authToken); // Use the new function\n\n        const transformedUser = {\n          picture: pictureUrl,\n          // Use the blob URL\n          name: userData.name,\n          bio: userData.about,\n          postsCount: userData.totalPosts,\n          followersCount: (_userData$followersCo = userData.followersCount) !== null && _userData$followersCo !== void 0 ? _userData$followersCo : 0,\n          followingCount: (_userData$followingCo = userData.followingCount) !== null && _userData$followingCo !== void 0 ? _userData$followingCo : 0\n        };\n        setUser(transformedUser);\n        console.log(\"Fetching posts data...\");\n        const postsResponse = await axios.get('http://100.28.49.102:9090/api/users/posts/', {\n          headers: {\n            'Authorization': `Bearer ${authToken}`\n          }\n        });\n        setPosts(postsResponse.data);\n      } catch (err) {\n        console.error(err);\n        setError(err.response ? err.response.data.message : 'Error fetching profile data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProfileData();\n  }, []);\n  const defaultPosts = [{\n    id: 1,\n    title: 'My first post',\n    excerpt: 'This is a summary of my first post.'\n  }, {\n    id: 2,\n    title: 'Another day in Backend Development',\n    excerpt: 'Here’s a bit about my day.'\n  }];\n\n  // Use fetched posts if available, otherwise use default posts\n  const displayPosts = posts.length > 0 ? posts : defaultPosts;\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [user && /*#__PURE__*/_jsxDEV(ProfileHeader, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(ProfileContent, {\n      posts: displayPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"SUWdkBaYYJzKZXF8Nj0V5TR5864=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useEffect","useState","axios","ProfileHeader","ProfileContent","jsxDEV","_jsxDEV","ProfilePage","_s","user","setUser","posts","setPosts","loading","setLoading","error","setError","fetchProfilePic","url","authToken","response","get","headers","responseType","imageUrl","URL","createObjectURL","data","fetchProfileData","localStorage","getItem","_userData$followersCo","_userData$followingCo","console","log","userResponse","userData","profilePicUrl","profilepic","pictureUrl","transformedUser","picture","name","bio","about","postsCount","totalPosts","followersCount","followingCount","postsResponse","err","message","defaultPosts","id","title","excerpt","displayPosts","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/tuba/Downloads/Blog-App-master/src/components/pages/ProfilePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ProfileHeader from './ProfileHeader';\nimport ProfileContent from './ProfileContent';\n\nconst ProfilePage = () => {\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchProfilePic = async (url, authToken) => {\n    const response = await axios.get(url, {\n      headers: {\n        'Authorization': `Bearer ${authToken}`,\n        'Accept': 'image/*',\n      },\n      responseType: 'blob',\n    });\n\n    const imageUrl = URL.createObjectURL(response.data); // Create a URL from the blob\n    return imageUrl; // Return the blob URL\n  };\n\n  useEffect(() => {\n    const fetchProfileData = async () => {\n      const authToken = localStorage.getItem(\"authToken\");\n\n      try {\n        console.log(\"Fetching user data...\");\n        const userResponse = await axios.get('http://100.28.49.102:9090/api/users/', {\n          headers: {\n            'Authorization': `Bearer ${authToken}`,\n          }\n        });\n\n        const userData = userResponse.data[0];\n\n        // Fetch the profile picture using the fetchProfilePic function\n        const profilePicUrl = `http://100.28.49.102:9090/api/users/profilepic/image/?url=${userData.profilepic}`;\n        const pictureUrl = await fetchProfilePic(profilePicUrl, authToken); // Use the new function\n\n        const transformedUser = {\n          picture: pictureUrl, // Use the blob URL\n          name: userData.name,\n          bio: userData.about,\n          postsCount: userData.totalPosts,\n          followersCount: userData.followersCount ?? 0,\n          followingCount: userData.followingCount ?? 0,\n        };\n\n        setUser(transformedUser);\n\n        console.log(\"Fetching posts data...\");\n        const postsResponse = await axios.get('http://100.28.49.102:9090/api/users/posts/', {\n          headers: {\n            'Authorization': `Bearer ${authToken}`,\n          }\n        });\n\n        setPosts(postsResponse.data);\n      } catch (err) {\n        console.error(err);\n        setError(err.response ? err.response.data.message : 'Error fetching profile data');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProfileData();\n  }, []);\n\n  const defaultPosts = [\n    { id: 1, title: 'My first post', excerpt: 'This is a summary of my first post.' },\n    { id: 2, title: 'Another day in Backend Development', excerpt: 'Here’s a bit about my day.' },\n  ];\n\n\n  // Use fetched posts if available, otherwise use default posts\n  const displayPosts = posts.length > 0 ? posts : defaultPosts;\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>{error}</p>;\n\n  return (\n    <div className=\"profile-page\">\n      {user && <ProfileHeader user={user} />}\n      <ProfileContent posts={displayPosts} />\n    </div>\n  );\n};\n\nexport default ProfilePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}