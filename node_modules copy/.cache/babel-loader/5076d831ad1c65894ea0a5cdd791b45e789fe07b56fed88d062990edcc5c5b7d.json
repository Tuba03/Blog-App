{"ast":null,"code":"// // src/services/apiService.js\n// // This file handles all communication with the backend API.\n\n// const API_BASE_URL = 'http://127.0.0.1:8000';\n\n// const apiService = {\n//   // Login a user and get a token\n//   login: async (email, password) => {\n//     const response = await fetch(`${API_BASE_URL}/auth/login`, {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ email, password }),\n//     });\n//     if (!response.ok) {\n//       const errorData = await response.json();\n//       throw new Error(errorData.detail || 'Login failed.');\n//     }\n//     return response.json();\n//   },\n\n//   // Register a new user\n//   signup: async (email, password) => {\n//     const response = await fetch(`${API_BASE_URL}/auth/register`, {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ email, password }),\n//     });\n//     if (!response.ok) {\n//       const errorData = await response.json();\n//       throw new Error(errorData.detail || 'Registration failed.');\n//     }\n//     return response.json();\n//   },\n\n//   // Fetch the current user's profile\n//   fetchProfile: async (token) => {\n//     const response = await fetch(`${API_BASE_URL}/auth/profile`, {\n//       method: 'GET',\n//       headers: { 'Authorization': `Bearer ${token}` },\n//     });\n//     if (!response.ok) {\n//       const errorData = await response.json();\n//       throw new Error(errorData.detail || 'Failed to fetch profile.');\n//     }\n//     return response.json();\n//   },\n\n//   // Fetch all blogs\n//   fetchAllBlogs: async () => {\n//     const response = await fetch(`${API_BASE_URL}/blogs`);\n//     if (!response.ok) {\n//       const errorData = await response.json();\n//       throw new Error(errorData.detail || 'Failed to fetch blogs.');\n//     }\n//     return response.json();\n//   },\n\n//   // Fetch blogs by the current user\n//   fetchMyBlogs: async (token) => {\n//     const response = await fetch(`${API_BASE_URL}/blogs/my`, {\n//       method: 'GET',\n//       headers: { 'Authorization': `Bearer ${token}` },\n//     });\n//     if (!response.ok) {\n//       const errorData = await response.json();\n//       throw new Error(errorData.detail || 'Failed to fetch your blogs.');\n//     }\n//     return response.json();\n//   },\n\n//   // Create a new blog post\n//   createBlog: async (token, title, content) => {\n//     const response = await fetch(`${API_BASE_URL}/blogs/`, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         'Authorization': `Bearer ${token}`,\n//       },\n//       body: JSON.stringify({ title, content }),\n//     });\n//     if (!response.ok) {\n//       const errorData = await response.json();\n//       throw new Error(errorData.detail || 'Failed to create blog.');\n//     }\n//     return response.json();\n//   }\n// };\n\n// export default apiService;","map":{"version":3,"names":[],"sources":["/Users/tuba/Downloads/Blog-App-master/src/services/apiService.js"],"sourcesContent":["// // src/services/apiService.js\n// // This file handles all communication with the backend API.\n\n// const API_BASE_URL = 'http://127.0.0.1:8000';\n\n// const apiService = {\n//   // Login a user and get a token\n//   login: async (email, password) => {\n//     const response = await fetch(`${API_BASE_URL}/auth/login`, {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ email, password }),\n//     });\n//     if (!response.ok) {\n//       const errorData = await response.json();\n//       throw new Error(errorData.detail || 'Login failed.');\n//     }\n//     return response.json();\n//   },\n\n//   // Register a new user\n//   signup: async (email, password) => {\n//     const response = await fetch(`${API_BASE_URL}/auth/register`, {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ email, password }),\n//     });\n//     if (!response.ok) {\n//       const errorData = await response.json();\n//       throw new Error(errorData.detail || 'Registration failed.');\n//     }\n//     return response.json();\n//   },\n\n//   // Fetch the current user's profile\n//   fetchProfile: async (token) => {\n//     const response = await fetch(`${API_BASE_URL}/auth/profile`, {\n//       method: 'GET',\n//       headers: { 'Authorization': `Bearer ${token}` },\n//     });\n//     if (!response.ok) {\n//       const errorData = await response.json();\n//       throw new Error(errorData.detail || 'Failed to fetch profile.');\n//     }\n//     return response.json();\n//   },\n\n//   // Fetch all blogs\n//   fetchAllBlogs: async () => {\n//     const response = await fetch(`${API_BASE_URL}/blogs`);\n//     if (!response.ok) {\n//       const errorData = await response.json();\n//       throw new Error(errorData.detail || 'Failed to fetch blogs.');\n//     }\n//     return response.json();\n//   },\n\n//   // Fetch blogs by the current user\n//   fetchMyBlogs: async (token) => {\n//     const response = await fetch(`${API_BASE_URL}/blogs/my`, {\n//       method: 'GET',\n//       headers: { 'Authorization': `Bearer ${token}` },\n//     });\n//     if (!response.ok) {\n//       const errorData = await response.json();\n//       throw new Error(errorData.detail || 'Failed to fetch your blogs.');\n//     }\n//     return response.json();\n//   },\n\n//   // Create a new blog post\n//   createBlog: async (token, title, content) => {\n//     const response = await fetch(`${API_BASE_URL}/blogs/`, {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         'Authorization': `Bearer ${token}`,\n//       },\n//       body: JSON.stringify({ title, content }),\n//     });\n//     if (!response.ok) {\n//       const errorData = await response.json();\n//       throw new Error(errorData.detail || 'Failed to create blog.');\n//     }\n//     return response.json();\n//   }\n// };\n\n// export default apiService;\n"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}