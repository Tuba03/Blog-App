{"ast":null,"code":"// user-service.js\nexport async function signUp(userData) {\n  let options;\n  if (userData instanceof FormData) {\n    // when Signup.js passes FormData\n    options = {\n      method: \"POST\",\n      body: userData // don't set Content-Type, browser will handle it\n    };\n  } else {\n    // fallback for JSON\n    options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    };\n  }\n  const response = await fetch(\"http://127.0.0.1:8000/auth/register\", options);\n  if (!response.ok) throw new Error(\"Signup failed\");\n  return response.json();\n}","map":{"version":3,"names":["signUp","userData","options","FormData","method","body","headers","JSON","stringify","response","fetch","ok","Error","json"],"sources":["/Users/tuba/Downloads/Blog-App-master/src/services/user-service.js"],"sourcesContent":["// user-service.js\r\nexport async function signUp(userData) {\r\n  let options;\r\n\r\n  if (userData instanceof FormData) {\r\n    // when Signup.js passes FormData\r\n    options = {\r\n      method: \"POST\",\r\n      body: userData, // don't set Content-Type, browser will handle it\r\n    };\r\n  } else {\r\n    // fallback for JSON\r\n    options = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(userData),\r\n    };\r\n  }\r\n\r\n  const response = await fetch(\"http://127.0.0.1:8000/auth/register\", options);\r\n\r\n  if (!response.ok) throw new Error(\"Signup failed\");\r\n  return response.json();\r\n}\r\n"],"mappings":"AAAA;AACA,OAAO,eAAeA,MAAMA,CAACC,QAAQ,EAAE;EACrC,IAAIC,OAAO;EAEX,IAAID,QAAQ,YAAYE,QAAQ,EAAE;IAChC;IACAD,OAAO,GAAG;MACRE,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEJ,QAAQ,CAAE;IAClB,CAAC;EACH,CAAC,MAAM;IACL;IACAC,OAAO,GAAG;MACRE,MAAM,EAAE,MAAM;MACdE,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CD,IAAI,EAAEE,IAAI,CAACC,SAAS,CAACP,QAAQ;IAC/B,CAAC;EACH;EAEA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAER,OAAO,CAAC;EAE5E,IAAI,CAACO,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;EAClD,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}