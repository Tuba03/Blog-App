{"ast":null,"code":"// import { myAxios } from \"./Helper\";\n\n// export const signUp = (user) => {\n//     return myAxios\n//     .post('/api/vl/auth/register')\n//     .then((response) => json())\n// };\n// export const loginUser=(loginDetail)=>{\n//     return myAxios\n//     .post('',loginDetail)\n//     .then((response) => response.data))\n// };\n\nimport axios from 'axios';\n// const cors = require('cors');\n// Define the API endpoint\nconst API_BASE_URL = 'http://100.28.49.102:9090';\n\n// Function to handle user signup\nexport const signUp = async userDto => {\n  try {\n    const formData = new FormData();\n\n    // Append the userDto object as a JSON string\n    formData.append('userDto', JSON.stringify(userDto));\n\n    // Append the profile picture file (if any)\n    if (userDto.profilepic && userDto.profilepic !== 'null') {\n      const file = await fetch(userDto.profilepic).then(r => r.blob());\n      formData.append('image', file, 'profilepic.jpg');\n    }\n\n    // Make the POST request\n    const response = await axios.post(`${API_BASE_URL}/api/v1/auth/register`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        'Accept': '/**'\n      }\n    });\n    const data = await response.json();\n    localStorage.setItem('authToken', data.token); // Save the token\n    return response.data; // Return the response data from the server\n  } catch (error) {\n    console.error('Error during signup:', error);\n    throw error;\n  }\n};\nexport const login = async (username, password) => {\n  const response = await fetch(`${API_BASE_URL}/api/v1/auth/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Login failed');\n  }\n  const data = await response.json();\n  localStorage.setItem('authToken', data.token); // Save the token\n  return data;\n};\n\n//  eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiaWxhbGFpamF6a2hhbmFtQGdtYWlsLmNvbSIsImV4cCI6MTcyNjc0OTE5NywiaWF0IjoxNzI2NzMxMTk3fQ.u-WSpO75XUqLQybPt84LdPNGPyNQd93o06u0X4DUdtVDyLMFuCDczQef8GaLIQ8UqBQdIZ6Yo64uA8a29qyRjQ\n// export const login = async (username, password) => {\n//     try {\n//       const response = await fetch(API_BASE_URL + '/api/v1/auth/login/', {\n//         method: 'POST',\n//         headers: {\n//           'Accept': 'application/json',\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ username, password }),\n//         credentials: 'include' // Include credentials if needed\n//       });\n\n//       if (!response.ok) {\n//         const errorText = await response.text();\n//         throw new Error(`Network response was not ok: ${errorText}`);\n//       }\n\n//       const data = await response.json();\n\n//       // Assuming the token is in the response\n//       const token = data.token;\n//       // Store the token in local storage or a state management library\n//       localStorage.setItem('authToken', token);\n\n//       return data;\n//     } catch (error) {\n//       console.error('Fetch error:', error);\n//       throw error;\n//     }\n//   };\n\n//  /api/password/forget\n//   /api/password/verify-otp\n\n// Create an instance of axios with default settings\nconst axiosInstance = axios.create({\n  baseURL: API_BASE_URL,\n  withCredentials: true // Include cookies with requests\n});\n\n// Function to send OTP\nexport const sendOtp = async email => {\n  try {\n    const response = await axiosInstance.post('/api/password/forget', {\n      email\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error('Error sending OTP:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\n\n// Function to verify OTP\nexport const verifyOtp = async (email, otp) => {\n  try {\n    const response = await axiosInstance.post('/api/password/verify-otp', {\n      email,\n      otp\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error('Error verifying OTP:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw error;\n  }\n};\n\n// export const handlePost = async () => {\n//   const title = document.getElementById('title').value;\n//   const category = document.getElementById('category').value;\n\n//   if (!title || category === 'Select option') {\n//       alert('Please fill out all fields.');\n//       return;\n//   }\n\n//   try {\n//       const response = await fetch(API_BASE_URL + '/api/v1/auth/login', {\n//           method: 'POST',\n//           headers: {\n//               'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify({ title, category}),\n//       });\n\n//       if (!response.ok) {\n//           throw new Error('Failed to post');\n//       }\n\n//       const data = await response.json();\n//       console.log('Post created:', data);\n//       alert('Post created successfully!');\n\n//   } catch (error) {\n//       console.error('Error:', error);\n//       alert('An error occurred while creating the post.');\n//   }\n// };","map":{"version":3,"names":["axios","API_BASE_URL","signUp","userDto","formData","FormData","append","JSON","stringify","profilepic","file","fetch","then","r","blob","response","post","headers","data","json","localStorage","setItem","token","error","console","login","username","password","method","body","ok","Error","axiosInstance","create","baseURL","withCredentials","sendOtp","email","_error$response","message","verifyOtp","otp","_error$response2"],"sources":["/Users/tuba/Downloads/Blog-App-master/src/services/user-service.js"],"sourcesContent":["// import { myAxios } from \"./Helper\";\r\n\r\n// export const signUp = (user) => {\r\n//     return myAxios\r\n//     .post('/api/vl/auth/register')\r\n//     .then((response) => json())\r\n// };\r\n// export const loginUser=(loginDetail)=>{\r\n//     return myAxios\r\n//     .post('',loginDetail)\r\n//     .then((response) => response.data))\r\n// };\r\n\r\n\r\n\r\nimport axios from 'axios';\r\n// const cors = require('cors');\r\n// Define the API endpoint\r\nconst API_BASE_URL = 'http://100.28.49.102:9090';\r\n\r\n// Function to handle user signup\r\nexport const signUp = async (userDto) => {\r\n    try {\r\n        const formData = new FormData();\r\n\r\n        // Append the userDto object as a JSON string\r\n        formData.append('userDto', JSON.stringify(userDto));\r\n\r\n        // Append the profile picture file (if any)\r\n        if (userDto.profilepic && userDto.profilepic !== 'null') {\r\n            const file = await fetch(userDto.profilepic).then(r => r.blob());\r\n            formData.append('image', file, 'profilepic.jpg');\r\n        }\r\n\r\n        // Make the POST request\r\n        const response = await axios.post(`${API_BASE_URL}/api/v1/auth/register`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                'Accept': '/**'\r\n            },\r\n        });\r\n        \r\n        const data = await response.json();\r\n        localStorage.setItem('authToken', data.token); // Save the token\r\n        return response.data; // Return the response data from the server\r\n    } catch (error) {\r\n        console.error('Error during signup:', error);\r\n        throw error;\r\n    }\r\n\r\n};\r\n\r\nexport const login = async (username, password) => {\r\n    const response = await fetch(`${API_BASE_URL}/api/v1/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error('Login failed');\r\n    }\r\n\r\n    const data = await response.json();\r\n    localStorage.setItem('authToken', data.token); // Save the token\r\n    return data;\r\n};\r\n\r\n\r\n//  eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJiaWxhbGFpamF6a2hhbmFtQGdtYWlsLmNvbSIsImV4cCI6MTcyNjc0OTE5NywiaWF0IjoxNzI2NzMxMTk3fQ.u-WSpO75XUqLQybPt84LdPNGPyNQd93o06u0X4DUdtVDyLMFuCDczQef8GaLIQ8UqBQdIZ6Yo64uA8a29qyRjQ\r\n// export const login = async (username, password) => {\r\n//     try {\r\n//       const response = await fetch(API_BASE_URL + '/api/v1/auth/login/', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Accept': 'application/json',\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({ username, password }),\r\n//         credentials: 'include' // Include credentials if needed\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         const errorText = await response.text();\r\n//         throw new Error(`Network response was not ok: ${errorText}`);\r\n//       }\r\n\r\n//       const data = await response.json();\r\n\r\n//       // Assuming the token is in the response\r\n//       const token = data.token;\r\n//       // Store the token in local storage or a state management library\r\n//       localStorage.setItem('authToken', token);\r\n\r\n//       return data;\r\n//     } catch (error) {\r\n//       console.error('Fetch error:', error);\r\n//       throw error;\r\n//     }\r\n//   };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//  /api/password/forget\r\n//   /api/password/verify-otp\r\n\r\n\r\n// Create an instance of axios with default settings\r\nconst axiosInstance = axios.create({\r\n    baseURL: API_BASE_URL,\r\n    withCredentials: true, // Include cookies with requests\r\n});\r\n\r\n// Function to send OTP\r\nexport const sendOtp = async (email) => {\r\n    try {\r\n        const response = await axiosInstance.post(\r\n            '/api/password/forget',\r\n            { email },\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                withCredentials: true\r\n            }\r\n        );\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error sending OTP:', error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Function to verify OTP\r\nexport const verifyOtp = async (email, otp) => {\r\n    try {\r\n        const response = await axiosInstance.post(\r\n            '/api/password/verify-otp',\r\n            { email, otp },\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            }\r\n        );\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error verifying OTP:', error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n// export const handlePost = async () => {\r\n//   const title = document.getElementById('title').value;\r\n//   const category = document.getElementById('category').value;\r\n\r\n//   if (!title || category === 'Select option') {\r\n//       alert('Please fill out all fields.');\r\n//       return;\r\n//   }\r\n\r\n//   try {\r\n//       const response = await fetch(API_BASE_URL + '/api/v1/auth/login', {\r\n//           method: 'POST',\r\n//           headers: {\r\n//               'Content-Type': 'application/json',\r\n//           },\r\n//           body: JSON.stringify({ title, category}),\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//           throw new Error('Failed to post');\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       console.log('Post created:', data);\r\n//       alert('Post created successfully!');\r\n\r\n//   } catch (error) {\r\n//       console.error('Error:', error);\r\n//       alert('An error occurred while creating the post.');\r\n//   }\r\n// };\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}