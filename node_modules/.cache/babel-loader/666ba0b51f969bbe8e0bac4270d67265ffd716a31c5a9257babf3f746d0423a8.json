{"ast":null,"code":"// src/services/apiService.js\n\nconst API_BASE_URL = 'http://127.0.0.1:8000';\nconst checkResponse = async response => {\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.detail || 'Something went wrong.');\n  }\n  return response.json();\n};\n\n// Authentication Endpoints\n\nexport const loginUser = async (email, password) => {\n  const response = await fetch(`${API_BASE_URL}/auth/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  return checkResponse(response);\n};\nexport const signupUser = async (email, password) => {\n  const response = await fetch(`${API_BASE_URL}/auth/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  return checkResponse(response);\n};\n\n// Profile Endpoints\n\nexport const getProfile = async token => {\n  const response = await fetch(`${API_BASE_URL}/auth/profile`, {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return checkResponse(response);\n};\n\n// Blog Endpoints\n\nexport const createBlog = async (title, content, token) => {\n  const response = await fetch(`${API_BASE_URL}/blogs`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      title,\n      content\n    })\n  });\n  return checkResponse(response);\n};\nexport const getAllBlogs = async () => {\n  const response = await fetch(`${API_BASE_URL}/blogs`, {\n    method: 'GET'\n  });\n  return checkResponse(response);\n};\nexport const getMyBlogs = async token => {\n  const response = await fetch(`${API_BASE_URL}/blogs/my`, {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return checkResponse(response);\n};\n\n// Add these to src/services/apiService.js\n\nexport const updateProfile = async (token, name, profilePhoto) => {\n  const response = await fetch(`${API_BASE_URL}/auth/profile/update`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      name,\n      profile_photo_url: profilePhoto\n    })\n  });\n  return checkResponse(response);\n};\nexport const followUser = async (userId, token) => {\n  const response = await fetch(`${API_BASE_URL}/users/${userId}/follow`, {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  return checkResponse(response);\n};","map":{"version":3,"names":["API_BASE_URL","checkResponse","response","ok","errorData","json","Error","detail","loginUser","email","password","fetch","method","headers","body","JSON","stringify","signupUser","getProfile","token","createBlog","title","content","getAllBlogs","getMyBlogs","updateProfile","name","profilePhoto","profile_photo_url","followUser","userId"],"sources":["/Users/tuba/Blog-App-1/src/services/apiService.js"],"sourcesContent":["// src/services/apiService.js\n\nconst API_BASE_URL = 'http://127.0.0.1:8000';\n\nconst checkResponse = async (response) => {\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.detail || 'Something went wrong.');\n  }\n  return response.json();\n};\n\n// Authentication Endpoints\n\nexport const loginUser = async (email, password) => {\n  const response = await fetch(`${API_BASE_URL}/auth/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  });\n  return checkResponse(response);\n};\n\nexport const signupUser = async (email, password) => {\n  const response = await fetch(`${API_BASE_URL}/auth/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  });\n  return checkResponse(response);\n};\n\n// Profile Endpoints\n\nexport const getProfile = async (token) => {\n  const response = await fetch(`${API_BASE_URL}/auth/profile`, {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n  return checkResponse(response);\n};\n\n// Blog Endpoints\n\nexport const createBlog = async (title, content, token) => {\n  const response = await fetch(`${API_BASE_URL}/blogs`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    },\n    body: JSON.stringify({ title, content }),\n  });\n  return checkResponse(response);\n};\n\nexport const getAllBlogs = async () => {\n  const response = await fetch(`${API_BASE_URL}/blogs`, {\n    method: 'GET',\n  });\n  return checkResponse(response);\n};\n\nexport const getMyBlogs = async (token) => {\n  const response = await fetch(`${API_BASE_URL}/blogs/my`, {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${token}`,\n    },\n  });\n  return checkResponse(response);\n};\n\n// Add these to src/services/apiService.js\n\nexport const updateProfile = async (token, name, profilePhoto) => {\n    const response = await fetch(`${API_BASE_URL}/auth/profile/update`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify({ name, profile_photo_url: profilePhoto }),\n    });\n    return checkResponse(response);\n};\n\nexport const followUser = async (userId, token) => {\n    const response = await fetch(`${API_BASE_URL}/users/${userId}/follow`, {\n        method: 'POST',\n        headers: {\n            'Authorization': `Bearer ${token}`,\n        },\n    });\n    return checkResponse(response);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}